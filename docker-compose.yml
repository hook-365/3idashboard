version: '3.8'

services:
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ./public:/app/public
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development service with hot reload
  dev:
    build:
      context: .
      target: base
    ports:
      - "3020:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    working_dir: /app
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    profiles: ["dev"]

  # PostgreSQL database for production data storage
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=comet3i
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    profiles: ["db"]

volumes:
  postgres_data: